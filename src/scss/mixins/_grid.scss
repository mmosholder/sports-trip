$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

//Mobile
$mobile-gutter-compensation: $mobile-gutter-width * .5 * -1;
$mobile-half-gutter-width: $mobile-gutter-width * .5;

@mixin col($col) {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: $mobile-half-gutter-width;
  padding-left: $mobile-half-gutter-width;
  flex-basis: (100% / $grid-columns * $col);
  max-width: 100% / $grid-columns * $col;

  @include mq($from: $breakpoint-medium) {
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
  }
}

@mixin span($col) {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: pxem(1);
  padding-left: pxem(1);
  flex-basis: (100% / $grid-columns * $col);
  max-width: 100% / $grid-columns * $col;
}

@mixin offset($col) {
  @if $col == 0 {
    margin-left: 0;
  }
  @else {
    margin-left: 100% / $grid-columns * $col;
  }
}

@mixin spacer($col) {
  @if $col == 0 {
    margin-right: 0;
  }
  @else {
    margin-right: 100% / $grid-columns * $col;
  }
}

@mixin row {
  box-sizing: border-box;
  display: flex;
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: $mobile-gutter-compensation;
  margin-left: $mobile-gutter-compensation;

  @include mq($from: $breakpoint-medium) {
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;
  }
}

.row {
  @include row;
  margin-left: 0;
  margin-right: 0;
}

.-row {
  @include row;
}

.row {
  @include row;
  margin-right: 0;
  margin-left: 0;

  @include mq($from: $breakpoint-medium) {
    margin-right: 0;
    margin-left: 0;
  }
}
